/*!
 * ------------------------------------------- START OF THIRD PARTY NOTICE -----------------------------------------
 * 
 * This file is based on or incorporates material from the projects listed below (Third Party IP). The original copyright notice and the license under which Microsoft received such Third Party IP, are set forth below. Such licenses and notices are provided for informational purposes only. Microsoft licenses the Third Party IP to you under the licensing terms for the Microsoft product. Microsoft reserves all other rights not expressly granted under this agreement, whether by implication, estoppel or otherwise.
 * 
 *   json2.js (2016-05-01)
 *   https://github.com/douglascrockford/JSON-js
 *   License: Public Domain
 * 
 * Provided for Informational Purposes Only
 * 
 * ----------------------------------------------- END OF THIRD PARTY NOTICE ------------------------------------------
 */
(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{379:function(e,n,i){var t=i(2),a=i(0),s=i(1),o=i(4),r=i(3),d=i(25),c=i(27);var l=window,u=r.String,p=a.PaginatedState,w=a.LoginMode,_=a.CredentialType,v=a.EstsError,x=s.Helper;function b(e){var n=this,a=e.serverData,s=e.serverError,r=e.isInitialView,d=e.username,b=e.displayName||"",h=e.hipRequiredForUsername,f=e.passwordBrowserPrefill,T=e.availableCreds||[],k=e.evictedCreds||[],m=e.defaultKmsiValue,g=e.userTenantBranding,C=e.sessions,P=e.callMetadata,S=e.flowToken,D=e.useEvictedCredentials,R=e.showCredViewBrandingDesc,y=a.str,B=a.F,L=a.AJ,V=a.n,W=a.d,E=a.urlSwitch,F=a.aC,A=a.g,I=a.v,M=a.fPOST_ForceSignin,H=a.ba,O=a.Ai,U=a.AZ,N=a.f,K=a.sErrorCode,q=a.fShowHipOnNewView,Z=(a.aX,a.am,!1),G=null,J=!1,j=!1,$=t.observable(!1);function z(){n.onSubmitReady()}function X(e){n.isBackButtonVisible(e),n.onSetBackButtonState(N&&e)}n.onSwitchView=o.create(),n.onSubmitReady=o.create(),n.onResetPassword=o.create(),n.onRedirect=o.create(),n.onSetBackButtonState=o.create(),n.onSetPendingRequest=o.create(),n.onUpdateFlowToken=o.create(),n.passwordTextbox=new c(t.pureComputed((function(){var e;if(!$())return e=s||null,s=null,e;return n.passwordTextbox.value()?null:y.CT_PWD_STR_Error_MissingPassword})),f),n.hipInterface=t.observable(),n.isKmsiChecked=t.observable(m),n.isRequestPending=t.observable(!1),n.unsafe_username=t.observable(),n.showTileLogo=t.observable(!1),n.isBackButtonVisible=t.observable(!1),n.secondaryButtonText=t.observable(),n.useEvictedCredentials=t.observable(D),n.showPassword=t.observable(!1),n.shouldHipInit=t.observable(!1),n.tenantBranding=null,n.unsafe_displayName=null,n.username=d,n.unsafe_passwordAriaLabel=null,n.hasRemoteNgc=!1,n.availableCreds=T,n.evictedCreds=k,n.allowPhoneDisambiguation=!1,n.unsafe_pageDescription=null,n.unsafe_pageTitle=null,n.unsafe_skipZTDLinkText=null,n.isInitialView=r,n.showHipOnPasswordView=!1,n.showChangeUserLink=!1,n.callMetadata=P,n.flowToken=S,n.showCredViewBrandingDesc=R,n.accessRecoveryLink=null,n.saveSharedData=function(e){e.remoteNgcParams.requestSent=!1,e.useEvictedCredentials=J||n.useEvictedCredentials(),e.password=n.passwordTextbox.value(),e.showCredViewBrandingDesc=!1,G&&(e.otcCredential=G)},n.getState=function(){return{isKmsiChecked:n.isKmsiChecked(),useEvictedCredentials:n.useEvictedCredentials()}},n.restoreState=function(e){e&&(n.isKmsiChecked(e.isKmsiChecked),n.useEvictedCredentials(e.useEvictedCredentials))},n.setDefaultFocus=function(){n.passwordTextbox.focused(!0)},n.primaryButton_onClick=function(){var e=n.hipInterface();if(!Z&&!n.isRequestPending())if($(!0),e&&e.enableValidation(),null===n.passwordTextbox.error())if(e){if(null!==e.getError())return void e.focus();Z=!0,e.verify((function(){Z=!1,z()}))}else j&&q?n.onSwitchView(p.Hip):z();else n.setDefaultFocus()},n.secondaryButton_onClick=function(){n.onSwitchView(p.Previous)},n.phoneDisambiguation_onClick=function(){n.onSwitchView(p.PhoneDisambiguation)},n.resetPassword_onClick=function(){n.accessRecoveryLink?l.open(n.accessRecoveryLink,"_blank"):n.onResetPassword(b)},n.selectAccount_onClick=function(){A&&E?n.onRedirect(E):n.onSwitchView(C.length?p.Tiles:p.Username)},n.hip_onHipLoad=function(){n.isRequestPending(!1),null!==n.passwordTextbox.error()&&n.setDefaultFocus()},n.skip_onClick=function(){null},n.switchToRemoteNGC_onClick=function(){n.onSwitchView(p.RemoteNGC)},n.skipZtd_onClick=function(){n.onRedirect(F)},n.privacy_onClick=function(){n.onSwitchView(p.ViewAgreement)},n.tileLogo_onLoad=function(){n.showTileLogo(!0)},n.desktopSso_onSuccess=function(){n.onSubmitReady()},n.switchToEvictedCredPicker_onClick=function(){J=!0,n.onSwitchView(p.CredentialPicker)},n.credSwitchLink_onSwitchView=function(e,i,t){t&&(G=t),n.onSwitchView(e,i)},n.credSwitchLink_onSetPendingRequest=function(e){n.onSetPendingRequest(e),n.isRequestPending(e)},n.credSwitchLink_onUpdateFlowToken=function(e){e&&(S=e,n.onUpdateFlowToken(e))},function(){var e=x.htmlUnescape(b);if(n.unsafe_username(x.htmlUnescape(d)),n.unsafe_displayName=t.observable(e).extend({preventExternalWrite:null}),n.allowPhoneDisambiguation=!A&&!u.isEmailAddress(b)&&!u.isSkypeName(b)&&u.isPhoneNumber(b),n.hasRemoteNgc=!!t.utils.arrayFirst(T,(function(e){return e.credType===_.RemoteNGC})),j=!!L&&d===h,n.showHipOnPasswordView=j&&!q,n.showChangeUserLink=I&&(A&&E||r),n.tenantBranding=g,V&&r?n.unsafe_pageDescription=u.format(y.CT_PWD_STR_RemoteConnect_PasswordPage_Desc,V,e):B===w.ForceSignin||B===w.ForceSigninMobile||B===w.ForceSigninHost||M?n.unsafe_pageDescription=K===v.SsoArtifactExpiredDueToConditionalAccess?y.WF_STR_ASLP_Info:u.format(y.WF_STR_ForceSI_Info,e):y.CT_PWD_STR_EnterPassword_Desc&&(n.unsafe_pageDescription=u.format(y.CT_PWD_STR_EnterPassword_Desc,e)),U&&O){var a=x.htmlUnescape(O);n.unsafe_pageTitle=H?u.format(y.CT_Win10_PwdWithOrgDomain_AndFriendlyName,x.htmlUnescape(H),a):u.format(y.CT_Win10_STR_Pwd_Title_WithOrgDomain,a),n.unsafe_skipZTDLinkText=u.format(y.CT_Win10_STR_Pwd_StartOver_WithOrgDomain,a)}else n.unsafe_pageTitle=y.CT_PWD_STR_EnterYourPassword_Title,n.unsafe_skipZTDLinkText=y.CT_Win10_STR_StartOver;n.unsafe_passwordAriaLabel=u.format(y.CT_PWD_STR_PwdTB_AriaLabel,e),n.showHipOnPasswordView&&n.isRequestPending(!0),n.unsafe_displayName.subscribe((function(){setTimeout((function(){n.passwordTextbox.value(null)}),0)})),r?W&&X(!0):X(!0),L&&n.showHipOnPasswordView&&i.e(1).then(function(){i(549),n.shouldHipInit(!0)}.bind(null,i))["catch"](i.oe),n.tenantBranding&&(n.accessRecoveryLink=n.tenantBranding.AccessRecoveryLink)}()}d.applyExtenders(t),t.components.register("login-paginated-password-view",{viewModel:b,template:i(442),synchronous:!l.ServerData.A||s.Helper.isStackSizeGreaterThan(l.ServerData.A),enableExtensions:!0}),e.exports=b},442:function(e,n,i){e.exports="\x3c!-- "+(i(28),i(15),i(26),' --\x3e\n\n\x3c!--  --\x3e\n\n<input type="hidden" name="i13" data-bind="value: isKmsiChecked() ? 1 : 0" />\n<input type="hidden" name="login" data-bind="value: unsafe_username" />\n<input type="text" name="loginfmt" data-bind="moveOffScreen, value: unsafe_displayName" />\n<input type="hidden" name="type"\n    data-bind="value: svr.Bi ? ')+i(0).PostType.PasswordInline+" : "+i(0).PostType.Password+'" />\n<input type="hidden" name="LoginOptions"\n    data-bind="value: isKmsiChecked() ? '+i(6).LoginOption.RememberPWD+" : "+i(6).LoginOption.NothingChecked+'" />\n<input type="hidden" name="lrt" data-bind="value: callMetadata.IsLongRunningTransaction" />\n<input type="hidden" name="lrtPartition" data-bind="value: callMetadata.LongRunningTransactionPartition" />\n<input type="hidden" name="hisRegion" data-bind="value: callMetadata.HisRegion" />\n<input type="hidden" name="hisScaleUnit" data-bind="value: callMetadata.HisScaleUnit" />\n\n<div id="loginHeader" class="row" role="heading" aria-level="1" data-bind="text: str[\'CT_PWD_STR_EnterPassword_Title\'], externalCss: { \'title\': true }"></div>\n\n\x3c!-- ko if: showCredViewBrandingDesc --\x3e\n<div class="row text-body">\n    <div id="credViewBrandingDesc" class="wrap-content" data-bind="text: str[\'WF_STR_Default_Desc\']"></div>\n</div>\n\x3c!-- /ko --\x3e\n\n\x3c!-- ko if: unsafe_pageDescription --\x3e\n<div class="row text-body">\n    <div id="passwordDesc" class="wrap-content" data-bind="text: unsafe_pageDescription"></div>\n</div>\n\x3c!-- /ko --\x3e\n\n<div class="row">\n    <div class="form-group col-md-24">\n        <div role="alert" aria-live="assertive">\n            \x3c!-- ko if: passwordTextbox.error --\x3e\n            <div id="passwordError" data-bind="\n                externalCss: { \'error\': true },\n                htmlWithBindings: passwordTextbox.error,\n                childBindings: { \'idA_IL_ForgotPassword0\': { href: accessRecoveryLink || svr.O, click: resetPassword_onClick } }"></div>\n            \x3c!-- /ko --\x3e\n        </div>\n\n        <div class="placeholderContainer" data-bind="component: { name: \'placeholder-textbox-field\',\n            publicMethods: passwordTextbox.placeholderTextboxMethods,\n            params: {\n                serverData: svr,\n                hintText: str[\'CT_PWD_STR_PwdTB_Label\'] },\n            event: {\n                updateFocus: passwordTextbox.textbox_onUpdateFocus } }">\n\n            <input name="passwd" type="password" id="i0118" autocomplete="off" class="form-control" aria-required="true" data-bind="\n                textInput: passwordTextbox.value,\n                ariaDescribedBy: [\n                    \'loginHeader\',\n                    showCredViewBrandingDesc ? \'credViewBrandingDesc\' : \'\',\n                    unsafe_pageDescription ? \'passwordDesc\' : \'\'].join(\' \'),\n                hasFocusEx: passwordTextbox.focused() && !showPassword(),\n                placeholder: $placeholderText,\n                ariaLabel: unsafe_passwordAriaLabel,\n                moveOffScreen: showPassword,\n                externalCss: {\n                    \'input\': true,\n                    \'text-box\': true,\n                    \'has-error\': passwordTextbox.error }" />\n\n            \x3c!-- ko if: svr.CT && showPassword() --\x3e\n            <input type="text" autocomplete="off" class="form-control" aria-required="true" data-bind="\n                textInput: passwordTextbox.value,\n                ariaDescribedBy: [\n                    \'loginHeader\',\n                    showCredViewBrandingDesc ? \'credViewBrandingDesc\' : \'\',\n                    unsafe_pageDescription ? \'passwordDesc\' : \'\'].join(\' \'),\n                hasFocusEx: true,\n                placeholder: $placeholderText,\n                ariaLabel: unsafe_passwordAriaLabel,\n                externalCss: {\n                    \'input\': true,\n                    \'text-box\': true,\n                    \'has-error\': passwordTextbox.error }" />\n            \x3c!-- /ko --\x3e\n        </div>\n\n        \x3c!-- ko if: svr.CT --\x3e\n        <div class="checkbox no-margin-bottom">\n            <label>\n                <input id="ShowHidePasswordCheckbox" type="checkbox" data-bind="checked: showPassword, ariaLabel: str[\'CT_PWD_STR_ShowPasswordAriaLabel\']" />\n                <span id="ShowHidePasswordLabel" data-bind="text: str[\'CT_PWD_STR_ShowPasswordLabel\']"></span>\n            </label>\n        </div>\n        \x3c!-- /ko --\x3e\n    </div>\n</div>\n\n\x3c!-- ko if: shouldHipInit --\x3e\n<div data-bind="component: { name: \'hip-field\',\n    publicMethods: hipInterface,\n    params: {\n        str: str,\n        onDemandVerify: true,\n        hasServerError: svr.b4,\n        useFake: svr.Cs },\n    event: {\n        hipLoad: hip_onHipLoad } }">\n</div>\n\x3c!-- /ko --\x3e\n\n<div data-bind="css: { \'position-buttons\': !tenantBranding.BoilerPlateText }">\n    <div>\n        \x3c!-- ko if: svr.CM --\x3e\n        <div class="row text-body">\n            <div id="swv-warning" class="wrap-content" data-bind="text: str[\'CT_PWD_STR_PersistentCookies_Warning\']"></div>\n        </div>\n        \x3c!-- /ko --\x3e\n        \x3c!-- ko if: svr.ax !== false && !svr.CM && !tenantBranding.KeepMeSignedInDisabled --\x3e\n        <div id="idTd_PWD_KMSI_Cb" class="form-group checkbox text-block-body no-margin-top" data-bind="visible: !svr.g && !showHipOnPasswordView">\n            <label id="idLbl_PWD_KMSI_Cb">\n                <input name="KMSI" id="idChkBx_PWD_KMSI0Pwd" type="checkbox" data-bind="checked: isKmsiChecked, ariaLabel: str[\'CT_PWD_STR_KeepMeSignedInCB_Text\']" />\n                <span data-bind="text: str[\'CT_PWD_STR_KeepMeSignedInCB_Text\']"></span>\n            </label>\n        </div>\n        \x3c!-- /ko --\x3e\n\n        <div class="row">\n            <div class="col-md-24">\n                <div class="text-13">\n                    <div class="form-group">\n                        <a id="idA_PWD_ForgotPassword" role="link" href="#" data-bind="text: str[\'CT_PWD_STR_ForgotPwdLink_Text\'], href: accessRecoveryLink || svr.O, click: resetPassword_onClick"></a>\n                    </div>\n                    \x3c!-- ko if: allowPhoneDisambiguation --\x3e\n                    <div class="form-group">\n                        <a id="switchToPhoneDisambiguation" href="#" data-bind="text: str[\'WF_STR_ThisIsntMyNumber_Text\'], click: phoneDisambiguation_onClick"></a>\n                    </div>\n                    \x3c!-- /ko --\x3e\n                    \x3c!-- ko ifnot: useEvictedCredentials --\x3e\n                        \x3c!-- ko component: { name: "cred-switch-link-control",\n                            params: {\n                                serverData: svr,\n                                username: username,\n                                availableCreds: availableCreds,\n                                flowToken: flowToken,\n                                currentCred: { credType: '+i(0).CredentialType.Password+' } },\n                            event: {\n                                switchView: credSwitchLink_onSwitchView,\n                                redirect: onRedirect,\n                                setPendingRequest: credSwitchLink_onSetPendingRequest,\n                                updateFlowToken: credSwitchLink_onUpdateFlowToken } } --\x3e\n                        \x3c!-- /ko --\x3e\n\n                        \x3c!-- ko if: evictedCreds.length > 0 --\x3e\n                        <div class="form-group">\n                            <a id="evictedAccount" href="#" data-bind="text: str[\'CT_PWD_STR_SwitchToCredPicker_Link_EvictedAcct\'], click: switchToEvictedCredPicker_onClick"></a>\n                        </div>\n                        \x3c!-- /ko --\x3e\n                    \x3c!-- /ko --\x3e\n                    \x3c!-- ko if: showChangeUserLink --\x3e\n                    <div class="form-group">\n                        <a id="i1668" href="#" data-bind="text: str[\'CT_FED_STR_ChangeUserLink_Text\'], click: selectAccount_onClick"></a>\n                    </div>\n                    \x3c!-- /ko --\x3e\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class="win-button-pin-bottom">\n        <div class="row" data-bind="css: { \'move-buttons\': tenantBranding.BoilerPlateText }">\n            <div data-bind="component: { name: \'footer-buttons-field\',\n                params: {\n                    serverData: svr,\n                    primaryButtonText: str[\'CT_PWD_STR_SignIn_Button\'],\n                    isPrimaryButtonEnabled: !isRequestPending(),\n                    isPrimaryButtonVisible: svr.f,\n                    isSecondaryButtonEnabled: true,\n                    isSecondaryButtonVisible: false },\n                event: {\n                    primaryButtonClick: primaryButton_onClick } }">\n            </div>\n        </div>\n    </div>\n</div>\n\n\x3c!-- ko if: tenantBranding.BoilerPlateText --\x3e\n<div id="idBoilerPlateText" class="wrap-content" data-bind="\n    htmlWithMods: tenantBranding.BoilerPlateText,\n    htmlMods: { filterLinks: svr.AE },\n    css: { \'transparent-lightbox\': tenantBranding.UseTransparentLightBox },\n    externalCss: { \'boilerplate-text\': true }"></div>\n\x3c!-- /ko --\x3e\n'}}]),window.__convergedlogin_ppassword_82b03f7b50c121f5c908=!0;
//# sourceMappingURL=../82b03f7b50c121f5c908.map